name: "Build and Release"

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: "Build Application"
    runs-on: ubuntu-24.04

    steps:
      - name: "Print Working Directory"
        run: pwd

      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Create a file with specifc content"
        run: git rev-parse --short HEAD > short_commit_id

      - name: "Generate a Release.txt file"
        run: echo ${{ github.sha }} > Release.txt

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22

      - name: build
        run: |
          env GOOS=linux   GOARCH=amd64 go build -o PKGNAME-linux-amd64
          env GOOS=linux   GOARCH=386   go build -o PKGNAME-linux-i386
          env GOOS=linux   GOARCH=arm   go build -o PKGNAME-linux-arm
          env GOOS=linux   GOARCH=arm64 go build -o PKGNAME-linux-arm64
          env GOOS=darwin  GOARCH=amd64 go build -o PKGNAME-darwin-amd64
          env GOOS=darwin  GOARCH=arm64 go build -o PKGNAME-darwin-arm64
          env GOOS=windows GOARCH=386   go build -o PKGNAME-windows.exe
          env GOOS=windows GOARCH=amd64 go build -o PKGNAME-windows-amd64.exe

      - name: "Persist the github workspace"
        id: persist-workspace
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}
          key: ${{ github.sha }}-persist-workspace-key

  release:
    name: "Release Application"
    needs: build
    permissions: write-all
    runs-on: ubuntu-24.04

    steps:
      - name: "Persist the github workspace"
        uses: actions/cache/restore@v4
        id: restore-workspace
        with:
          path: ${{ github.workspace }}
          key: ${{ github.sha }}-persist-workspace-key

      - name: version
        run: echo "${GITHUB_REF#refs/*/}"
        id: version

      - name: "Create a new release ${{ steps.version.outputs.version }}"
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.version.outputs.version }}
          body_path: CHANGELOG.md
          files: |
            Release.txt
            PKGNAME-linux-amd64
            PKGNAME-linux-i386
            PKGNAME-linux-arm
            PKGNAME-linux-arm64
            PKGNAME-darwin-amd64
            PKGNAME-darwin-arm64
            PKGNAME-windows.exe
            PKGNAME-windows-amd64.exe

      - name: "Get full commit id from file"
        run: |
          export OUR_COMMIT_ID=$(cat short_commit_id)
          git rev-parse ${OUR_COMMIT_ID}

  vaccum:
    name: "Nuke Em"
    needs: [build, release]
    permissions: write-all
    runs-on: ubuntu-24.04

    steps:
      - name: "Remove the persistant cache"
        uses: pulsiot/nuke-cache@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache-key: ${{ github.sha }}-persist-workspace-key
